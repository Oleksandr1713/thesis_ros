<?xml version="1.0"?>
<launch>

<!--    &lt;!&ndash; It changes a whole package Logger level  &ndash;&gt;-->
<!--    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find simulation)/config/custom_rosconsole.conf"/>-->

<!--    &lt;!&ndash; MongoDb server&ndash;&gt;-->
<!--    <include file="$(find mongodb_store)/launch/mongodb_store.launch"/>-->

    <!-- Map server -->
    <arg name="map_file" default="$(find simulation)/maps/maze.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!-- Map enrichment -->
    <node name="map_enrichment" pkg="simulation" type="map_enrichment_node" output="screen"/>

    <!-- Localization -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <remap from="scan" to="/scan"/>
        <remap from="map" to="/map"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="odom_model_type" value="diff-corrected"/>
        <param name="base_frame_id" value="base_footprint"/>
        <param name="update_min_d" value="0.1"/>
        <param name="update_min_a" value="0.2"/>
        <param name="min_particles" value="100"/>
        <param name="max_particles" value="300"/>
        <param name="transform_tolerance" value="0.5"/>
        <param name="use_map_topic" value="true"/>
    </node>

    <!-- Move base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find rosbot_navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find rosbot_navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find rosbot_navigation)/config/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find rosbot_navigation)/config/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find rosbot_navigation)/config/move_base_params.yaml" command="load" />
        <rosparam file="$(find rosbot_navigation)/config/trajectory_planner.yaml" command="load" />

        <remap from="cmd_vel" to="cmd_vel"/>
        <remap from="odom" to="odom"/>
        <remap from="scan" to="/scan"/>
        <remap from="map" to="/simulation/augmented_map"/>
<!--        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />-->
    </node>

    <!--&lt;!&ndash; Image recognition &ndash;&gt;
    <node pkg="find_object_2d" type="find_object_2d" name="find_object_2d">
        <param name="gui" value="false"/>
        <param name="subscribe_depth" value="true"/>
        <param name="objects_path" value="$(find simulation)/image_rec/"/>

        <remap from="image" to="/camera/rgb/image_raw"/>
        <remap from="rgb/image_rect_color" to="/camera/rgb/image_raw"/>
        <remap from="depth_registered/image_raw" to="/camera/depth/image_raw"/>
        <remap from="depth_registered/camera_info" to="/camera/depth/camera_info"/>
    </node>

    &lt;!&ndash; Obstacle detection and its position calculation &ndash;&gt;
    <node name="obstacle_dpc" pkg="simulation" type="obstacle_dpc_node" output="screen"/>

    &lt;!&ndash; Job scheduler &ndash;&gt;
    <node name="job_scheduler" pkg="simulation" type="job_scheduler_node" output="screen"/>

    &lt;!&ndash; Job catcher &ndash;&gt;
    <node name="job_catcher" pkg="simulation" type="job_catcher_node" output="screen"/>-->

    <!-- Show in Rviz   -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find simulation)/rviz/sim_navigation.rviz" required="true" output='log'/>

</launch>